# Python stubs generated by omniidl from server.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "Server"
#
__name__ = "Server"
_0_Server = omniORB.openModule("Server", r"server.idl")
_0_Server__POA = omniORB.openModule("Server__POA", r"server.idl")


# typedef ... UserList
class UserList:
    _NP_RepositoryId = "IDL:Server/UserList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_Server.UserList = UserList
_0_Server._d_UserList  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_Server._ad_UserList = (omniORB.tcInternal.tv_alias, UserList._NP_RepositoryId, "UserList", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_Server._tc_UserList = omniORB.tcInternal.createTypeCode(_0_Server._ad_UserList)
omniORB.registerType(UserList._NP_RepositoryId, _0_Server._ad_UserList, _0_Server._tc_UserList)
del UserList

# interface CentralServer
_0_Server._d_CentralServer = (omniORB.tcInternal.tv_objref, "IDL:Server/CentralServer:1.0", "CentralServer")
omniORB.typeMapping["IDL:Server/CentralServer:1.0"] = _0_Server._d_CentralServer
_0_Server.CentralServer = omniORB.newEmptyClass()
class CentralServer :
    _NP_RepositoryId = _0_Server._d_CentralServer[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Server.CentralServer = CentralServer
_0_Server._tc_CentralServer = omniORB.tcInternal.createTypeCode(_0_Server._d_CentralServer)
omniORB.registerType(CentralServer._NP_RepositoryId, _0_Server._d_CentralServer, _0_Server._tc_CentralServer)

# CentralServer operations and attributes
CentralServer._d_connect_user = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_long, ), None)
CentralServer._d_change_user_status = (((omniORB.tcInternal.tv_string,0), omniORB.tcInternal.tv_long), (), None)
CentralServer._d_get_user_status = (((omniORB.tcInternal.tv_string,0), ), (omniORB.tcInternal.tv_long, ), None)
CentralServer._d_list_users_by_status = ((omniORB.tcInternal.tv_long, ), (omniORB.typeMapping["IDL:Server/UserList:1.0"], ), None)
CentralServer._d_get_username_list = ((), (omniORB.typeMapping["IDL:Server/UserList:1.0"], ), None)

# CentralServer object reference
class _objref_CentralServer (CORBA.Object):
    _NP_RepositoryId = CentralServer._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def connect_user(self, *args):
        return self._obj.invoke("connect_user", _0_Server.CentralServer._d_connect_user, args)

    def change_user_status(self, *args):
        return self._obj.invoke("change_user_status", _0_Server.CentralServer._d_change_user_status, args)

    def get_user_status(self, *args):
        return self._obj.invoke("get_user_status", _0_Server.CentralServer._d_get_user_status, args)

    def list_users_by_status(self, *args):
        return self._obj.invoke("list_users_by_status", _0_Server.CentralServer._d_list_users_by_status, args)

    def get_username_list(self, *args):
        return self._obj.invoke("get_username_list", _0_Server.CentralServer._d_get_username_list, args)

omniORB.registerObjref(CentralServer._NP_RepositoryId, _objref_CentralServer)
_0_Server._objref_CentralServer = _objref_CentralServer
del CentralServer, _objref_CentralServer

# CentralServer skeleton
__name__ = "Server__POA"
class CentralServer (PortableServer.Servant):
    _NP_RepositoryId = _0_Server.CentralServer._NP_RepositoryId


    _omni_op_d = {"connect_user": _0_Server.CentralServer._d_connect_user, "change_user_status": _0_Server.CentralServer._d_change_user_status, "get_user_status": _0_Server.CentralServer._d_get_user_status, "list_users_by_status": _0_Server.CentralServer._d_list_users_by_status, "get_username_list": _0_Server.CentralServer._d_get_username_list}

CentralServer._omni_skeleton = CentralServer
_0_Server__POA.CentralServer = CentralServer
omniORB.registerSkeleton(CentralServer._NP_RepositoryId, CentralServer)
del CentralServer
__name__ = "Server"

#
# End of module "Server"
#
__name__ = "server_idl"

_exported_modules = ( "Server", )

# The end.
